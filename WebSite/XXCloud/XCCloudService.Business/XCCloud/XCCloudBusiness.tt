<#@ template language="C#" debug="false" hostspecific="true"#>
<#@ include file="EF.Utility.CS.ttinclude"#><#@
 output extension=".cs"#>
 
<#

CodeGenerationTools code = new CodeGenerationTools(this);
MetadataLoader loader = new MetadataLoader(this);
CodeRegion region = new CodeRegion(this, 1);
MetadataTools ef = new MetadataTools(this);

string solutionsPath = Host.ResolveAssemblyReference("$(SolutionDir)");  
string projectPath = Host.ResolveAssemblyReference("$(ProjectDir)");
string inputFile = solutionsPath + @"\\XXCloudService.Model\\XCCloud\\XCCloudDBModel.edmx";  

EdmItemCollection ItemCollection = loader.CreateEdmItemCollection(inputFile); 
string namespaceName = code.VsNamespaceSuggestion();

EntityFrameworkTemplateFileManager fileManager = EntityFrameworkTemplateFileManager.Create(this);

#>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using XCCloudService.BLL.Container;
using XCCloudService.BLL.IBLL.XCCloud;

namespace XCCloudService.Business.XCCloud
{  
<#
foreach (EntityType entity in ItemCollection.GetItems<EntityType>().OrderBy(e => e.Name))
{   
#>    
    public partial class <#=entity.Name#>Biz
    {
		public static I<#=entity.Name#>Service I
        {
            get
            {
                return BLLContainer.Resolve<I<#=entity.Name#>Service>();
            }
        }

        public static I<#=entity.Name#>Service NI
        {
            get
            {
                return BLLContainer.Resolve<I<#=entity.Name#>Service>(resolveNew: true);
            }
        }
    }
<#}#>
}